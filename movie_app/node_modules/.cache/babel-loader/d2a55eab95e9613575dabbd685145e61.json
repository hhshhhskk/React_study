{"ast":null,"code":"var _jsxFileName = \"/Users/gwagminseong/Documents/github/React/movie_app/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      movies: []\n    };\n\n    this.getMovies = async () => {\n      const {\n        data: {\n          data: {\n            movies\n          }\n        }\n      } = await axios.get(\"http://yts-proxy.now.sh/list_movies.json/sort_by=rating\");\n      this.setState({\n        movies,\n        isLoading: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const {\n      isLoading,\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"loader__text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"movies\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          id: movie.id,\n          year: movie.year,\n          title: movie.tilte,\n          summary: movie.summary,\n          poster: movie.medium_cover_image\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gwagminseong/Documents/github/React/movie_app/src/App.js"],"names":["React","axios","Movie","App","Component","state","isLoading","movies","getMovies","data","get","setState","componentDidMount","render","map","movie","id","year","tilte","summary","medium_cover_image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,MAAM,EAAE;AAFF,KADwB;;AAAA,SAMhCC,SANgC,GAMpB,YAAY;AACtB,YAAM;AAACC,QAAAA,IAAI,EAAE;AACLA,UAAAA,IAAI,EAAE;AAAEF,YAAAA;AAAF;AADD;AAAP,UAGE,MAAMN,KAAK,CAACS,GAAN,CAAU,yDAAV,CAHd;AAII,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAF;AAAUD,QAAAA,SAAS,EAAE;AAArB,OAAd;AACL,KAZ+B;AAAA;;AAchCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,SAAL;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAwB,KAAKF,KAAnC;AACA,wBACE;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA,gBACGC,SAAS,gBACR;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADQ,gBAKN;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,kBACIC,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACjB,QAAC,KAAD;AAEG,UAAA,EAAE,EAAEA,KAAK,CAACC,EAFb;AAGG,UAAA,IAAI,EAAED,KAAK,CAACE,IAHf;AAIG,UAAA,KAAK,EAAEF,KAAK,CAACG,KAJhB;AAKG,UAAA,OAAO,EAAEH,KAAK,CAACI,OALlB;AAMG,UAAA,MAAM,EAAEJ,KAAK,CAACK;AANjB,WACQL,KAAK,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,gBADC;AADJ;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA1C+B;;AA4ClC,eAAeb,GAAf","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const {data: { \n            data: { movies }\n          }\n        } = await axios.get(\"http://yts-proxy.now.sh/list_movies.json/sort_by=rating\");\n        this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  };\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section class=\"container\">\n        {isLoading ? (\n          <div class=\"loader__text\">\n              <span>Loading...</span>\n          </div>\n          ) : (\n            <div class=\"movies\">\n              { movies.map(movie => (\n               <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.tilte}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n              />\n            ))}\n            </div>\n    )} \n    </section>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}